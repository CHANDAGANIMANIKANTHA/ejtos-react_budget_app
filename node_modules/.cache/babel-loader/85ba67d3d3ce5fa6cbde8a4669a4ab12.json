{"ast":null,"code":"var _jsxFileName = \"/home/project/ejtos-react_budget_app/src/components/Remaining.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Remaining = () => {\n  _s();\n\n  const {\n    expenses,\n    budget,\n    currency\n  } = useContext(AppContext);\n  const [currencySymbol, setCurrencySymbol] = useState(currency); // Initialize with the current currency\n\n  useEffect(() => {\n    // Update currencySymbol when the currency changes\n    setCurrencySymbol(currency);\n  }, [currency]);\n  const totalExpenses = expenses.reduce((total, item) => {\n    return total = total + item.cost;\n  }, 0);\n  const alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `alert ${alertType}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Remaining: \", currencySymbol, budget - totalExpenses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Remaining, \"/am8EOeIEZkJm2xzZ3EWmpEVA9w=\");\n\n_c = Remaining;\nexport default Remaining;\n\nvar _c;\n\n$RefreshReg$(_c, \"Remaining\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AppContext","Remaining","expenses","budget","currency","currencySymbol","setCurrencySymbol","totalExpenses","reduce","total","item","cost","alertType"],"sources":["/home/project/ejtos-react_budget_app/src/components/Remaining.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Remaining = () => {\n    const { expenses, budget, currency } = useContext(AppContext);\n    const [currencySymbol, setCurrencySymbol] = useState(currency); // Initialize with the current currency\n\n    useEffect(() => {\n        // Update currencySymbol when the currency changes\n        setCurrencySymbol(currency);\n    }, [currency]);\n\n    const totalExpenses = expenses.reduce((total, item) => {\n        return (total = total + item.cost);\n    }, 0);\n    const alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\n\n    return (\n        <div className={`alert ${alertType}`}>\n            <span>Remaining: {currencySymbol}{budget - totalExpenses}</span>\n        </div>\n    );\n};\n\nexport default Remaining;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC;EAApB,IAAiCP,UAAU,CAACG,UAAD,CAAjD;EACA,MAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAACK,QAAD,CAApD,CAFoB,CAE4C;;EAEhEN,SAAS,CAAC,MAAM;IACZ;IACAQ,iBAAiB,CAACF,QAAD,CAAjB;EACH,CAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;EAKA,MAAMG,aAAa,GAAGL,QAAQ,CAACM,MAAT,CAAgB,CAACC,KAAD,EAAQC,IAAR,KAAiB;IACnD,OAAQD,KAAK,GAAGA,KAAK,GAAGC,IAAI,CAACC,IAA7B;EACH,CAFqB,EAEnB,CAFmB,CAAtB;EAGA,MAAMC,SAAS,GAAGL,aAAa,GAAGJ,MAAhB,GAAyB,cAAzB,GAA0C,eAA5D;EAEA,oBACI;IAAK,SAAS,EAAG,SAAQS,SAAU,EAAnC;IAAA,uBACI;MAAA,0BAAkBP,cAAlB,EAAkCF,MAAM,GAAGI,aAA3C;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAnBD;;GAAMN,S;;KAAAA,S;AAqBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}